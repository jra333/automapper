-- ALL TABLE QUERIES FOR SNOWFLAKE DB INITIALIZATION --


-- Create stages if they don't exist
CREATE STAGE IF NOT EXISTS AUTOMAPPER_UPLOAD_STAGE
    FILE_FORMAT = (TYPE = CSV FIELD_OPTIONALLY_ENCLOSED_BY = '"')
    COMMENT = 'Stage for initial file uploads';

CREATE STAGE IF NOT EXISTS AUTOMAPPER_PROCESSED_STAGE
    FILE_FORMAT = (TYPE = CSV FIELD_OPTIONALLY_ENCLOSED_BY = '"')
    COMMENT = 'Stage for processed files';

CREATE STAGE IF NOT EXISTS AUTOMAPPER_ARCHIVE_STAGE
    FILE_FORMAT = (TYPE = CSV FIELD_OPTIONALLY_ENCLOSED_BY = '"')
    COMMENT = 'Stage for archived files';

-- Create users table if it doesn't exist
CREATE TABLE IF NOT EXISTS AUTOMAPPER_USERS (
    ID VARCHAR(36) NOT NULL,
    USERNAME VARCHAR(255),
    PASSWORD_HASH VARCHAR(255),
    NAME VARCHAR(255),
    EMAIL VARCHAR(255),
    ACCOUNT_TYPE VARCHAR(50),
    CREATED_AT TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT users_pk PRIMARY KEY (ID),
    CONSTRAINT users_username_unique UNIQUE (USERNAME)
);

-- Create file submissions table if it doesn't exist
CREATE TABLE IF NOT EXISTS AUTOMAPPER_FILE_SUBMISSIONS (
    ID VARCHAR(36) NOT NULL,
    FILENAME VARCHAR(255),
    STATUS VARCHAR(50),
    SUBMITTED_BY VARCHAR(255),
    CREATED_AT TIMESTAMP_NTZ(9),
    CAMPAIGN_NAME VARCHAR(255),
    CURRENT_REVIEWER VARCHAR(255),
    STAGE_PATH VARCHAR(255),
    ARCHIVE_PATH VARCHAR(255),
    ARCHIVED_AT TIMESTAMP_NTZ(9),
    CONSTRAINT file_submissions_pk PRIMARY KEY (ID)
);

-- Create submission comments table if it doesn't exist
CREATE TABLE IF NOT EXISTS AUTOMAPPER_SUBMISSION_COMMENTS (
    ID VARCHAR(36) NOT NULL,
    SUBMISSION_ID VARCHAR(36),
    COMMENT_TEXT VARCHAR(16777216),
    CREATED_BY VARCHAR(255),
    CREATED_AT TIMESTAMP_NTZ(9),
    CONSTRAINT submission_comments_pk PRIMARY KEY (ID),
    CONSTRAINT submission_comments_fk FOREIGN KEY (SUBMISSION_ID) 
        REFERENCES AUTOMAPPER_FILE_SUBMISSIONS(ID)
);

-- Create status history table if it doesn't exist
CREATE TABLE IF NOT EXISTS AUTOMAPPER_STATUS_HISTORY (
    ID VARCHAR(36) NOT NULL,
    SUBMISSION_ID VARCHAR(36),
    STATUS VARCHAR(50),
    CHANGED_BY VARCHAR(255),
    CHANGED_AT TIMESTAMP_NTZ(9),
    CONSTRAINT status_history_pk PRIMARY KEY (ID),
    CONSTRAINT status_history_fk FOREIGN KEY (SUBMISSION_ID) 
        REFERENCES AUTOMAPPER_FILE_SUBMISSIONS(ID)
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_file_submissions_status 
    ON AUTOMAPPER_FILE_SUBMISSIONS(STATUS);
CREATE INDEX IF NOT EXISTS idx_file_submissions_submitted_by 
    ON AUTOMAPPER_FILE_SUBMISSIONS(SUBMITTED_BY);
CREATE INDEX IF NOT EXISTS idx_comments_submission_id 
    ON AUTOMAPPER_SUBMISSION_COMMENTS(SUBMISSION_ID);
CREATE INDEX IF NOT EXISTS idx_status_history_submission_id 
    ON AUTOMAPPER_STATUS_HISTORY(SUBMISSION_ID);

-- Create or replace status check constraint
ALTER TABLE AUTOMAPPER_FILE_SUBMISSIONS DROP CONSTRAINT IF EXISTS valid_status;
ALTER TABLE AUTOMAPPER_FILE_SUBMISSIONS ADD CONSTRAINT valid_status 
    CHECK (STATUS IN ('uploaded', 'mapper_complete', 'partnership_complete', 'performance_complete'));

-- Create or replace account type check constraint
ALTER TABLE AUTOMAPPER_USERS DROP CONSTRAINT IF EXISTS valid_account_type;
ALTER TABLE AUTOMAPPER_USERS ADD CONSTRAINT valid_account_type 
    CHECK (ACCOUNT_TYPE IN ('Mapper', 'Partnership', 'Performance'));

-- Grant necessary permissions (adjust according to your security requirements)
GRANT USAGE ON STAGE AUTOMAPPER_UPLOAD_STAGE TO ROLE AUTOMAPPER_USER;
GRANT USAGE ON STAGE AUTOMAPPER_PROCESSED_STAGE TO ROLE AUTOMAPPER_USER;
GRANT USAGE ON STAGE AUTOMAPPER_ARCHIVE_STAGE TO ROLE AUTOMAPPER_USER;

GRANT SELECT, INSERT, UPDATE ON TABLE AUTOMAPPER_USERS TO ROLE AUTOMAPPER_USER;
GRANT SELECT, INSERT, UPDATE ON TABLE AUTOMAPPER_FILE_SUBMISSIONS TO ROLE AUTOMAPPER_USER;
GRANT SELECT, INSERT ON TABLE AUTOMAPPER_SUBMISSION_COMMENTS TO ROLE AUTOMAPPER_USER;
GRANT SELECT, INSERT ON TABLE AUTOMAPPER_STATUS_HISTORY TO ROLE AUTOMAPPER_USER;

-- Create sequence for potential future use
CREATE SEQUENCE IF NOT EXISTS AUTOMAPPER_SUBMISSION_SEQ
    START = 1
    INCREMENT = 1
    COMMENT = 'Sequence for generating submission numbers';

-- Optional: Create a view for easier reporting
CREATE OR REPLACE VIEW AUTOMAPPER_FILE_STATUS_VIEW AS
SELECT 
    fs.ID,
    fs.FILENAME,
    fs.STATUS,
    fs.CAMPAIGN_NAME,
    fs.SUBMITTED_BY,
    fs.CURRENT_REVIEWER,
    fs.CREATED_AT,
    COUNT(DISTINCT sc.ID) as COMMENT_COUNT,
    MAX(fs.ARCHIVED_AT) as ARCHIVED_AT
FROM AUTOMAPPER_FILE_SUBMISSIONS fs
LEFT JOIN AUTOMAPPER_SUBMISSION_COMMENTS sc ON fs.ID = sc.SUBMISSION_ID
GROUP BY 
    fs.ID, 
    fs.FILENAME, 
    fs.STATUS, 
    fs.CAMPAIGN_NAME,
    fs.SUBMITTED_BY,
    fs.CURRENT_REVIEWER,
    fs.CREATED_AT;

-- Create file versions table if it doesn't exist
CREATE TABLE IF NOT EXISTS SCHEMA.DB..AUTOMAPPER_FILE_VERSIONS (
    ID VARCHAR(36) NOT NULL,
    SUBMISSION_ID VARCHAR(36),
    VERSION_NUMBER INT,
    STAGE_PATH VARCHAR(255),
    CREATED_BY VARCHAR(255),
    CREATED_AT TIMESTAMP_NTZ(9),
    CONSTRAINT file_versions_pk PRIMARY KEY (ID),
    CONSTRAINT file_versions_fk FOREIGN KEY (SUBMISSION_ID) 
        REFERENCES SCHEMA.DB..AUTOMAPPER_FILE_SUBMISSIONS(ID),
    CONSTRAINT file_versions_user_fk FOREIGN KEY (CREATED_BY)
        REFERENCES SCHEMA.DB..AUTOMAPPER_USERS(USERNAME)
);

-- Create file format for CSV files
CREATE OR REPLACE FILE FORMAT CSV_FORMAT
    TYPE = 'CSV'
    FIELD_DELIMITER = ','
    RECORD_DELIMITER = '\n'
    SKIP_HEADER = 1
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    EMPTY_FIELD_AS_NULL = TRUE
    COMPRESSION = 'AUTO'
    PRESERVE_SPACE = TRUE
    ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE;

-- Grant usage on file format
GRANT USAGE ON FILE FORMAT CSV_FORMAT TO ROLE AUTOMAPPER_USER;

-- Grant permissions with fully qualified name
GRANT SELECT, INSERT, UPDATE ON TABLE SCHEMA.DB..AUTOMAPPER_FILE_VERSIONS TO ROLE AUTOMAPPER_USER; 

-- Add ARCHIVED columns to file submissions table
ALTER TABLE AUTOMAPPER_FILE_SUBMISSIONS 
ADD COLUMN IF NOT EXISTS ARCHIVED BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS ARCHIVED_AT TIMESTAMP_NTZ DEFAULT NULL,
ADD COLUMN IF NOT EXISTS ARCHIVE_PATH VARCHAR(255) DEFAULT NULL;